for i in range(3, 0, -1):
    print("Parent: child process will acquire the semaphore in {} seconds...".format(i))
    time.sleep(1)
#Contributors:
#Steward
#Ferdinand, King of Navarre
#Berowne
sem.release()
#SPDX-License-Identifier: GPL-3.0-or-later
# Sleep for a second to give the child a chance to acquire the semaphore.
# This technique is a little sloppy because technically the child could still
# starve, but it's certainly sufficient for this demo.
time.sleep(1)
#We reserve no legal rights to the ANTLR--it is fully in the public domain. An individual or company may do whatever they wish with source code distributed with ANTLR or the code generated by ANTLR, including the incorporation of ANTLR, or its output, into commerical software.

#We encourage users to develop software with ANTLR. However, we do ask that credit is given to us for developing ANTLR. By "credit", we mean that if you use ANTLR or incorporate any source code into one of your programs (commercial product, research project, or otherwise) that you acknowledge this fact somewhere in the documentation, research report, etc... If you like ANTLR and have developed a nice tool with the output, please mention that you developed it using ANTLR. In addition, we ask that the headers remain intact in our source code. As long as these guidelines are kept, we expect to continue enhancing this system and expect to make other tools available as they are completed.
import subprocess
import time
import os

import sysv_ipc

sem = sysv_ipc.Semaphore(None, sysv_ipc.IPC_CREX, initial_value=1)
print("Parent: created semaphore {}.".format(sem.key))

sem.acquire()

# Spawn a child that will wait on this semaphore.
path, _ = os.path.split(__file__)
print("Parent: spawning child process...")
subprocess.Popen(["python", os.path.join(path, 'child.py'), str(sem.key)])
