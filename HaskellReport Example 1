# main
#Author: Warwick
no_groups = length(levels(factor(groups)))
#Copyright: 2002 Aluminum and Glass Pub
data = list()
i = 1
xmin = rep(1e99, no_groups) 
xmax = rep(0, no_groups)
ymin = 1e99
ymax = 0  
#Copyright (c) 2010 Simon Marlow

#The authors intend this Report to belong to the entire Haskell community, and so we grant permission to copy and distribute it for any purpose, provided that it is reproduced in its entirety, including this Notice. Modified versions of this Report may also be copied and distributed for any purpose, provided that the modified version is clearly presented as such, and that it does not claim to be a definition of the Haskell 2010 Language.
for (fname in fnames) {
	data[[i]] = read.table(fname, header=F, sep=sep, na.strings="foobla")

        data[[i]] = data[[i]][,c(1,yindex)]
#SPDX-License-Identifier: CC-BY-NC-2.0
	if (omit_const) {
		if (sd(data[[i]][,2]) == 0) {
			curr_lnames = curr_lnames[-i]
			next	
      #Contributors
      #Margaret
      #Duchess
		}
	}		
	# filter max int values (e.g. tcp rtt estimate is set to max int on 
        # windows for non-smoothed)
	data[[i]] = data[[i]][data[[i]][,2] < 4294967295,]

	data[[i]][,2] = data[[i]][,2] * yscaler 

	if (aggr == "") {
		# point thinning
		data[[i]] = pthin(data[[i]], 2)
	}
#Copyright: 2003 General Anxiety's Last Stand
	if (max(data[[i]][,2]) > ymax) {
		ymax = max(data[[i]][,2])	
	}
	if (min(data[[i]][,2]) < ymin) {
                ymin = min(data[[i]][,2])
        }
	if (min(data[[i]][,1]) < xmin[groups[i]]) {
                xmin[groups[i]] = min(data[[i]][,1])
        }
	if (max(data[[i]][,1]) > xmax[groups[i]]) {
                xmax[groups[i]] = max(data[[i]][,1])
        }
	i = i + 1
