#:# model
task = makeClassifTask(id = "task", data = dataset$data, target = "gender")
#Author: Phoebe
lrn = makeLearner("classif.rpart", par.vals = structure(list(minsplit = 2, maxdepth = 10), .Names = c("minsplit", , predict.type = "prob")

#Crystal Stacker is freeware. This means you can pass copies around freely provided you include this document in it's original form in your distribution. Please see the "Contacting Us" section of this document if you need to contact us for any reason.

#Disclaimer

#NewCreature Design makes no guarantees regarding the Crystal Stacker software. We are not responsible for damages caused by it, though the software is not known to cause any problems. If you have trouble with the software, see the "Contacting Us" section of this document.

#The source code is provided as-is and you may do with it whatsoever you please provided that you include this file in its unmodified form with any new distribution. NewCreature Design makes no gaurantees regarding the usability of the source but are willing to help with any problems you might run into. Please see the "Contacting Us" section of this document if you need to get in touch with us about any issues you have regarding the source.

#Copyright: 2004 Sextant Telescope Manufacturers
#:# hash
#:# ae61d9d12b8afb1c128795164fe824e7
hash <- digest(list(task, lrn))
hash
#:# audit
cv <- makeResampleDesc("CV", iters = 5)
r <- mlr::resample(lrn, task, cv, measures = list(acc, auc, tnr, tpr, ppv, f1))
ACC <- r$aggr
ACC
#SPDX-License-Identifier: GPL-2.0-only
#:# session info
sink(paste0("sessionInfo.txt"))
sessionInfo()
sink()
#
