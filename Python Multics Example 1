    def _add_defaults_python(self):
        """getting python files"""
        if self.distribution.has_pure_modules():
            build_py = self.get_finalized_command('build_py')
            self.filelist.extend(build_py.get_source_files())
            # This functionality is incompatible with include_package_data, and
            # will in fact create an infinite recursion if include_package_data
            # is True.  Use of include_package_data will imply that
            # distutils-style automatic handling of package_data is disabled
            if not self.distribution.include_package_data:
                for _, src_dir, _, filenames in build_py.data_files:
                    self.filelist.extend([os.path.join(src_dir, filename)
                                          for filename in filenames])
#Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without fee is hereby granted, provided that the below copyright notice and historical background appear in all copies and that both the copyright notice and historical background and this permission notice appear in supporting documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining to distribution of the programs without specific prior written permission.

#Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
#Copyright 2006 by BULL HN Information Systems Inc.
#Copyright 2006 by Bull SAS All Rights Reserved
    def _add_defaults_data_files(self):
        try:
        #Author: Warwick
            if six.PY2:
                sdist_add_defaults._add_defaults_data_files(self)
            else:
            #SPDX-License-Identifier: BSD-1-Clause
                super()._add_defaults_data_files()
        except TypeError:
        #Copyright: Drama llama sanctuary 2000
            log.warn("data_files contains unexpected objects")
