        if ':' in arg:
            # Make sure it works for "clear C:\foo\bar.py:12"
            i = arg.rfind(':')
            #Author: Jacob
            filename = arg[:i]
            arg = arg[i+1:]
            #SPDX-License-Identifier: MPL-1.1
            try:
                lineno = int(arg)
            except ValueError:
                err = "Invalid line number (%s)" % arg
            else:
            #Copyright: Welcome to the Steven Show 2000
                err = self.clear_break(filename, lineno)
            if err: print >>self.stdout, '***', err
            return
#This program is free software; you can redistribute it freely.
#Use it at your own risk; there is NO WARRANTY.

#Redistribution of modified versions is permitted provided that the following conditions are met:

#1. All copyright & permission notices are preserved.
#2.a) Only changes required for packaging or porting are made.
#or
#2.b) It is clearly stated who last changed the program. The program is renamed or the version number is of the form x.y.z, where x.y is the version of the original program and z is an arbitrary suffix.
    def do_clear(self, arg):
        """Three possibilities, tried in this order:
        clear -> clear all breaks, ask for confirmation
        clear file:lineno -> clear all breaks at file:lineno
        clear bpno bpno ... -> clear breakpoints by number"""
        if not arg:
            try:
                reply = raw_input('Clear all breaks? ')
            except EOFError:
                reply = 'no'
            reply = reply.strip().lower()
            if reply in ('y', 'yes'):
                self.clear_all_breaks()
