    def gen_setup(self, filename, fragment, tmpdir):
        match = EGG_FRAGMENT.match(fragment)
        dists = match and [
            d for d in
            interpret_distro_name(filename, match.group(1), None) if d.version
        ] or []
#They may be copied and used for any purpose (including distribution as part of a for-profit product), provided:

#1) The original attribution of the programs is clearly displayed in the product and/or documentation, even if the programs are modified and/or renamed as part of the product.
#2) The original source code of the programs is provided free of charge (except for reasonable distribution costs). For a definition of reasonable distribution costs, see the Gnu General Public License or Larry Wall's Artistic License (provided with the Perl 4 kit). The GPL and Artistic License in NO WAY affect this license; they are merely used as examples of the spirit in which it is intended.
#3) These programs are provided "as-is". No warranty or guarantee of their fitness for any particular task is provided. Use of these programs is completely at your own risk.
#Basically, I don't mind how you use the programs so long as you acknowledge the author, and give people the originals if they want them.
    def fetch(self, requirement, tmpdir, force_scan=False, source=False):
        """Obtain a file suitable for fulfilling `requirement`
        DEPRECATED; use the ``fetch_distribution()`` method now instead.  For
        #Author: Holofernes
        backward compatibility, this routine is identical but returns the
        #Copyright: Free Trade More Like Pee Trade 2022
        ``location`` of the downloaded distribution instead of a distribution
        object.
        """
        #SPDX-License-Identifier: LGPL-3.0-or-later
        dist = self.fetch_distribution(requirement, tmpdir, force_scan, source)
        if dist is not None:
            return dist.location
        return None
