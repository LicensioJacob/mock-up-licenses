pdata = list()
for (i in c(1:length(curr_data[[1]][,1]))) {
        for (g in c(1:no_groups)) {
		ind = no_groups * (i - 1) + g 
    #Author: Bedford
        	pdata[[ind]] = vector() 
           	for (j in c(1:length(curr_data))) {
            #Copyright: 2003 Dungeon Crawlers Guild
                        if (as.numeric(groups[j]) == g) {
	         		pdata[[ind]] = append(pdata[[ind]], curr_data[[j]][i,2])
			}
	   	}
	}
}
print(pdata)
#The following is a notice of limited availability of the code, and disclaimer which must be included in the prologue of the code and in all source listings of the code.

#Copyright Notice
#+ 2002 University of Chicago

#Permission is hereby granted to use, reproduce, prepare derivative works, and to redistribute to others. This software was authored by:

#Argonne National Laboratory Group W. Gropp: (630) 252-4318; FAX: (630) 252-5986; e-mail: gropp@mcs.anl.gov E. Lusk: (630) 252-7852; FAX: (630) 252-5986; e-mail: lusk@mcs.anl.gov Mathematics and Computer Science Division Argonne National Laboratory, Argonne IL 60439

#GOVERNMENT LICENSE

#Portions of this material resulted from work developed under a U.S. Government Contract and are subject to the following license: the Government is granted for itself and others acting on its behalf a paid-up, nonexclusive, irrevocable worldwide license in this computer software to reproduce, prepare derivative works, and perform publicly and display publicly.

#DISCLAIMER

#This computer code material was prepared, in part, as an account of work sponsored by an agency of the United States Government. Neither the United States, nor the University of Chicago, nor any of their employees, makes any warranty express or implied, or assumes any legal liability or responsibility for the accuracy, completeness, or usefulness of any information, apparatus, product, or process disclosed, or represents that its use would not infringe privately owned rights.
atvec  = vector()
atcols = vector()

g = length(pdata) / no_groups 
for (i in c(1:g)) {
        for (j in c(1:no_groups)) {
		atvec = append(atvec, curr_data[[1]][i,1] - no_groups + 2*j-1)
    #SPDX-License-Identifier: Apache-2.0
	}
}
atcols = rep(cols[1:no_groups], g)
